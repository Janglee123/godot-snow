[gd_scene load_steps=12 format=2]

[ext_resource path="res://Land.tscn" type="PackedScene" id=1]
[ext_resource path="res://icon.png" type="Texture" id=2]
[ext_resource path="res://Game.gd" type="Script" id=3]
[ext_resource path="res://Player.tscn" type="PackedScene" id=4]
[ext_resource path="res://assets/snowflake.png" type="Texture" id=5]
[ext_resource path="res://assets/aim.png" type="Texture" id=6]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
render_mode unshaded;

uniform float blur_size : hint_range(0, 45) = 35;

void fragment() {
	// this blur depends on the zoom of the screen, so not perfect for getting the right results all the time
	COLOR = textureLod(SCREEN_TEXTURE, SCREEN_UV, float(blur_size)/10.0);
	
	float alpha = 1.0;
	vec3 color = texture(TEXTURE, UV).rgb;
	float average = (COLOR.r + COLOR.g + COLOR.b) / 3.0;
	
	// outside of everything, no balls
	// set alpha to 0.0 to set a sharp outer edge
	if(average < 0.2) {
		color.r = 0.5;
		color.g = 0.8;
		color.b = 1.0;
		alpha = 1.0;
	}
	
	// outer edges of balls, where there's very little pixels
	// alpha is 1.0 by default, we can adjust the color here
	// color starts at full white (r/g/b = 1.0), so we can reduce channels to get color
	if(average > 0.2 && average < 0.4) {
		color.r = 0.5;
		color.g = 0.8;
		color.b = 1.0;
		alpha = 1.0;
	}
	// center of balls, most coverage of pixels
	// alpha is 1.0 by default, we can adjust the color here
	// color starts at full white (r/g/b = 1.0), so we can reduce channels to get color
	if(average > 0.4) {
		color.r = 1.0;
		color.g = 1.0;
		color.b = 1.0;
	}
	COLOR = vec4(color, alpha);
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/blur_size = 30.0

[sub_resource type="Gradient" id=3]
offsets = PoolRealArray( 0, 0.533333, 1 )
colors = PoolColorArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )

[sub_resource type="GradientTexture" id=4]
gradient = SubResource( 3 )

[sub_resource type="ParticlesMaterial" id=5]
lifetime_randomness = 0.3
emission_shape = 2
emission_box_extents = Vector3( 512, 256, 1 )
flag_disable_z = true
direction = Vector3( 0, 1, 0 )
spread = 0.0
gravity = Vector3( 0, 10, 0 )
initial_velocity = 10.0
angular_velocity = 50.0
angular_velocity_random = 1.0
orbit_velocity = 0.03
orbit_velocity_random = 1.0
linear_accel = 3.0
linear_accel_random = 1.0
radial_accel = 2.0
radial_accel_random = 1.0
tangential_accel = 10.0
tangential_accel_random = 1.0
damping = 10.0
damping_random = 1.0
angle = 90.0
angle_random = 1.0
scale = 0.25
scale_random = 0.5
color_ramp = SubResource( 4 )

[node name="Node" type="Node"]
script = ExtResource( 3 )
__meta__ = {
"_edit_horizontal_guides_": [  ]
}

[node name="Land" parent="." instance=ExtResource( 1 )]

[node name="TextureRect" type="TextureRect" parent="."]
material = SubResource( 2 )
margin_left = -1.0
margin_right = 1034.0
margin_bottom = 597.0
texture = ExtResource( 2 )
expand = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Player" parent="." instance=ExtResource( 4 )]
position = Vector2( 264.041, 428.857 )

[node name="Particles2D" type="Particles2D" parent="."]
position = Vector2( 517.048, 0.909454 )
amount = 128
lifetime = 12.0
randomness = 1.0
process_material = SubResource( 5 )
texture = ExtResource( 5 )

[node name="Sprite" type="Sprite" parent="."]
scale = Vector2( 0.5, 0.5 )
texture = ExtResource( 6 )
